import os
import shutil
import pyzipper

def extract_with_pyzipper(src_zip, extract_path, password=None):
    """ pyzipper를 사용해 AES 암호화 ZIP을 풀어주는 함수 """
    with pyzipper.AESZipFile(src_zip, 'r') as zf:
        try:
            if password:
                zf.setpassword(password.encode('utf-8'))
            zf.extractall(extract_path)
        except RuntimeError as e:
            if 'Bad password' in str(e):
                print(f"[!] 암호 오류: {src_zip}")
            else:
                print(f"[!] 압축 해제 오류: {src_zip} - {e}")

def extract_and_rename_exe_with_nested_zip(
    src_folder,     # AES-256 암호화 ZIP 파일들이 있는 폴더
    dst_folder,     # benign 폴더 (exe를 새 이름으로 복사해둘 곳)
    temp_folder,    # 임시로 압축을 풀어둘 폴더
    zip_password=None
):
    os.makedirs(dst_folder, exist_ok=True)
    os.makedirs(temp_folder, exist_ok=True)
    
    for outer_zip_filename in os.listdir(src_folder):
        if outer_zip_filename.lower().endswith('.zip'):
            outer_zip_path = os.path.join(src_folder, outer_zip_filename)

            # 임시 폴더 정리
            clean_folder(temp_folder)

            # 1️⃣ 최상위 ZIP 해제
            try:
                extract_with_pyzipper(outer_zip_path, temp_folder, zip_password)
            except Exception as e:
                print(f"[!] {outer_zip_filename} 해제 실패: {e}")
                continue
    # 2️⃣ 내부 ZIP 파일 순회
    exe_count = 0
    for inner_zip_filename in os.listdir(temp_folder):

        if inner_zip_filename.lower().endswith('.zip'):
            inner_zip_path = os.path.join(temp_folder, inner_zip_filename)
            inner_zip_noext = os.path.splitext(inner_zip_filename)[0]

            # 2-1️⃣ 내부 ZIP 해제
            try:
                extract_with_pyzipper(inner_zip_path, dst_folder)
                #print(f"[!] {inner_zip_filename} 해제 성공")
                exe_count += 1
            except Exception as e:
                print(f"[!] {inner_zip_filename} 해제 실패: {e}")
                continue

    clean_folder(temp_folder)
    print(f"exe 개수 : {exe_count}")    

def clean_folder(folder_path):
    """ 폴더 내부의 모든 파일/폴더를 삭제하는 함수 """
    for root, dirs, files in os.walk(folder_path, topdown=False):
        for f in files:
            os.remove(os.path.join(root, f))
        for d in dirs:
            os.rmdir(os.path.join(root, d))

if __name__ == "__main__":
    src_folder = os.path.join(os.getcwd(), "malware_sample", "Malware_KIS")         # 최상위 ZIP이 있는 폴더
    dst_folder = os.path.join(os.getcwd(), "malware_sample", "benign_dataset")      # benign 폴더
    temp_folder = os.path.join(os.getcwd(), "malware_sample", "temp_extract")        # 임시 폴더

    zip_password = "Kisa@infecteD"                        # AES-256 ZIP 암호

    extract_and_rename_exe_with_nested_zip(src_folder, dst_folder, temp_folder, zip_password)
    print("ZIP 안의 ZIP 해제 및 benign 이름 변경 완료!")
